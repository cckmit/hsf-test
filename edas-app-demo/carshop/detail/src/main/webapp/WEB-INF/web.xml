<!DOCTYPE web-app PUBLIC
 "-//Sun Microsystems, Inc.//DTD Web Application 2.3//EN"
 "http://java.sun.com/dtd/web-app_2_3.dtd" >

<web-app>
	<display-name>Archetype Created Web Application</display-name>

	<context-param>
		<param-name>contextConfigLocation</param-name>
		<param-value>classpath:spring/applicationContext.xml</param-value>
	</context-param>

	<listener>
		<listener-class>org.springframework.web.context.ContextLoaderListener</listener-class>
	</listener>
<!-- 	<listener>
		<listener-class>com.alibaba.edas.carshop.detail.StartListener</listener-class>
	</listener> -->

		<!-- springmvc前端控制器 -->
	<servlet>
		<servlet-name>springmvc</servlet-name>
		<servlet-class>org.springframework.web.servlet.DispatcherServlet</servlet-class>
		<!-- contextConfigLocation配置springmvc加载的配置文件（配置处理器映射器、适配器等等） 如果不配置contextConfigLocation，默认加载的是/WEB-INF/servlet名称-serlvet.xml（springmvc-servlet.xml） -->
		<init-param>
			<param-name>contextConfigLocation</param-name>
			<param-value>classpath:spring/spring-mvc.xml</param-value>
		</init-param>


		<!-- 表示servlet随服务启动； 标记容器是否在启动的时候就加载这个servlet。 当值为0或者大于0时，表示容器在应用启动时就加载这个servlet； -->
		<load-on-startup>1</load-on-startup>
	</servlet>
	<!-- springmvc对于请求url的解析 -->
	<servlet-mapping>
		<servlet-name>springmvc</servlet-name>
		<!-- 第一种：*.action，访问以.action结尾 由DispatcherServlet进行解析 第二种：/，所以访问的地址都由DispatcherServlet进行解析，对于静态文件的解析需要配置不让DispatcherServlet进行解析 
			使用此种方式可以实现 RESTful风格的url 第三种：/*，这样配置不对，使用这种配置，最终要转发到一个jsp页面时， 仍然会由DispatcherServlet解析jsp地址，不能根据jsp页面找到handler，会报错。 -->
		<url-pattern>/</url-pattern>
	</servlet-mapping>

	<!-- <servlet>
		<servlet-name>IndexServlet</servlet-name>
		<servlet-class>com.alibaba.edas.carshop.detail.IndexServlet</servlet-class>
	</servlet>
	<servlet-mapping>
		<servlet-name>IndexServlet</servlet-name>
		<url-pattern>/index.htm</url-pattern>
	</servlet-mapping> -->

</web-app>
